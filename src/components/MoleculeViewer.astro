---
interface Props {
  xyzData: string;
  width?: string;
  height?: string;
  backgroundColor?: string;
  caption?: string;
  showLabels?: boolean;
}

const { 
  xyzData, 
  width = "100%", 
  height = "400px",
  backgroundColor = "white",
  caption,
  showLabels = true
} = Astro.props;

// Generate a unique ID
const viewerId = `mol-viewer-${Math.random().toString(36).substring(2, 9)}`;
---

<!-- Load 3Dmol.js libraries first -->
<script is:inline src="https://3Dmol.org/build/3Dmol-min.js"></script>
<script is:inline src="https://3Dmol.org/build/3Dmol.ui-min.js"></script>

<!-- Viewer container -->
<figure class="molecule-viewer-container">
  <div id={viewerId} style={`width:${width}; height:${height}; position:relative; border-radius:8px; overflow:hidden;`}></div>
  {caption && <figcaption>{caption}</figcaption>}
</figure>

<!-- Molecule viewer initialization script with client:idle -->
<script define:vars={{ xyzData, viewerId, backgroundColor, showLabels }} client:idle>
  function initViewer() {
    // Check if the viewer element exists and 3Dmol is loaded
    if (document.getElementById(viewerId) && window.$3Dmol) {
      try {
        // Initialize 3Dmol.js viewer
        const viewer = $3Dmol.createViewer(
          document.getElementById(viewerId),
          { backgroundColor: backgroundColor }
        );

        // Add molecular model from XYZ data
        viewer.addModel(xyzData, "xyz");
        
        // Set molecular style
        viewer.setStyle({}, {
          sphere: { scale: 0.3, colorscheme: "elem" },
          stick: { radius: 0.15, colorscheme: "elem" }
        });

        // Add atom labels with index and element symbol
        if (showLabels) {
          let atoms = viewer.selectedAtoms({});
          atoms.forEach((atom, idx) => {
            // Calculate position with offset
            const position = {
              x: atom.x + 0.3,  // Offset to the right
              y: atom.y + 0.3,  // Offset upwards
              z: atom.z
            };
            
            viewer.addLabel(`${idx+1}:${atom.elem}`, {
              position: position,
              backgroundColor: "rgba(255,255,255,0.25)",  // Semi-transparent background
              fontColor: "black",
              fontSize: 10.5,
              alignment: "center"
            });
          });
        }

        // Optimize view and render
        viewer.zoomTo();
        viewer.render();
        
        console.log(`Molecule viewer '${viewerId}' initialized successfully`);
      } catch (error) {
        console.error(`Molecule viewer initialization error: ${error.message}`);
      }
    } else {
      // Retry if element or 3Dmol not found
      setTimeout(initViewer, 50);
    }
  }
  
  // Start initialization immediately
  initViewer();
</script>

<style>
  .molecule-viewer-container {
    margin: 2rem 0;
  }
  
  figcaption {
    text-align: center;
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: #666;
  }
</style>
